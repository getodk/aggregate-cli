import static org.opendatakit.gradle.Util.getVersionName
import static org.opendatakit.gradle.Util.makeExecutableJar
import static org.opendatakit.gradle.Util.zip

plugins {
  id 'java'
  id 'idea'
  id 'de.fuerstenau.buildconfig' version '1.1.8'
  id 'jacoco'
}

group 'org.opendatakit'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  // CLI
  compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
  compile group: 'de.vandermeer', name: 'asciitable', version: '0.3.2'

  // HTTP
  compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
  compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.6'
  testCompile group: 'com.github.dreamhead', name: 'moco-core', version: '0.12.0'

  // JSON
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'

  // Logging & reporting
  runtime group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
  compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
  compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

  // Templating
//  compile group: 'com.github.jknack', name: 'handlebars', version: '4.1.2'
  compile 'io.pebbletemplates:pebble:3.0.7'

  // Testing
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
  testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
}

buildConfig {
  appName = 'ODK Aggregate Updater'
  version = getVersionName()
  clsName = 'BuildConfig'
  packageName = 'org.opendatakit.briefcase.buildconfig'
}

jar {
  manifest {
    attributes "Main-Class": "org.opendatakit.aggregateupdater.Launcher"
  }

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }

  doLast {
    makeExecutableJar("${buildDir}/libs/${archivesBaseName}-${version}.jar", "${buildDir}/libs/aggregate-updater")
    zip("${buildDir}/libs/aggregate-updater")
  }
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}
